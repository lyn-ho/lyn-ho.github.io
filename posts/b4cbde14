<!DOCTYPE html>












  


<html class="theme-next pisces use-motion" lang="">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2"/>
<meta name="theme-color" content="#222">



  
  
  <link rel="stylesheet" href="/lib/needsharebutton/needsharebutton.css">










<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />



  <meta name="google-site-verification" content="tRKwwbKaupN23inSkJrhDCZ4tuguoxh5yxt_IOEP14M" />



  <meta name="msvalidate.01" content="973C14F39226DE6BCE30A0BF3C97DD37" />






  <meta name="baidu-site-verification" content="4jb2KswTIT" />










  
  
  
  

  
    
    
  

  

  

  

  

  
    
    
    <link href="https://fonts.google.com/specimen/Open+Sans/css?family=Open Sans:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext" rel="stylesheet" type="text/css">
  






<link href="/lib/font-awesome/css/font-awesome.min.css?v=4.6.2" rel="stylesheet" type="text/css" />

<link href="/css/main.css?v=6.4.0" rel="stylesheet" type="text/css" />


  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png?v=6.4.0">


  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png?v=6.4.0">


  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png?v=6.4.0">


  <link rel="mask-icon" href="/images/logo.svg?v=6.4.0" color="#222">









<script type="text/javascript" id="hexo.configurations">
  var NexT = window.NexT || {};
  var CONFIG = {
    root: '/',
    scheme: 'Pisces',
    version: '6.4.0',
    sidebar: {"position":"right","display":"post","offset":12,"b2t":false,"scrollpercent":false,"onmobile":false},
    fancybox: false,
    fastclick: false,
    lazyload: false,
    tabs: true,
    motion: {"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},
    algolia: {
      applicationID: '',
      apiKey: '',
      indexName: '',
      hits: {"per_page":10},
      labels: {"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}
    }
  };
</script>


  




  <meta name="description" content="原文：Master the JavaScript Interview: What is Pure Function?   纯函数对于包括函数式编程，可靠并发和 React+Redux apps 等用途至关重要。但是 “pure function” 是什么意思呢？">
<meta name="keywords" content="JavaScript">
<meta property="og:type" content="article">
<meta property="og:title" content="【译】精通 JavaScript： 什么是纯函数（Pure Function）？">
<meta property="og:url" content="lyn-ho.github.io/posts/b4cbde14">
<meta property="og:site_name" content="Lyn&#39;s Blog">
<meta property="og:description" content="原文：Master the JavaScript Interview: What is Pure Function?   纯函数对于包括函数式编程，可靠并发和 React+Redux apps 等用途至关重要。但是 “pure function” 是什么意思呢？">
<meta property="og:locale" content="default">
<meta property="og:image" content="https://cdn-images-1.medium.com/max/2000/1*gF8oCkYNvktBbAAG-nxYrg.jpeg">
<meta property="og:updated_time" content="2018-09-16T13:06:35.361Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="【译】精通 JavaScript： 什么是纯函数（Pure Function）？">
<meta name="twitter:description" content="原文：Master the JavaScript Interview: What is Pure Function?   纯函数对于包括函数式编程，可靠并发和 React+Redux apps 等用途至关重要。但是 “pure function” 是什么意思呢？">
<meta name="twitter:image" content="https://cdn-images-1.medium.com/max/2000/1*gF8oCkYNvktBbAAG-nxYrg.jpeg">






  <link rel="canonical" href="lyn-ho.github.io/posts/b4cbde14"/>



<script type="text/javascript" id="page.configurations">
  CONFIG.page = {
    sidebar: "",
  };
</script>

  <title>【译】精通 JavaScript： 什么是纯函数（Pure Function）？ | Lyn's Blog</title>
  









  <noscript>
  <style type="text/css">
    .use-motion .motion-element,
    .use-motion .brand,
    .use-motion .menu-item,
    .sidebar-inner,
    .use-motion .post-block,
    .use-motion .pagination,
    .use-motion .comments,
    .use-motion .post-header,
    .use-motion .post-body,
    .use-motion .collection-title { opacity: initial; }

    .use-motion .logo,
    .use-motion .site-title,
    .use-motion .site-subtitle {
      opacity: initial;
      top: initial;
    }

    .use-motion {
      .logo-line-before i { left: initial; }
      .logo-line-after i { right: initial; }
    }
  </style>
</noscript>

</head>

<body itemscope itemtype="http://schema.org/WebPage" lang="default">

  
  
    
  

  <div class="container sidebar-position-right page-post-detail">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-wrapper">
  <div class="site-meta ">
    

    <div class="custom-logo-site-title">
      <a href="/" class="brand" rel="start">
        <span class="logo-line-before"><i></i></span>
        <span class="site-title">Lyn's Blog</span>
        <span class="logo-line-after"><i></i></span>
      </a>
    </div>
    
  </div>

  <div class="site-nav-toggle">
    <button aria-label="Toggle navigation bar">
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
      <span class="btn-bar"></span>
    </button>
  </div>
</div>



<nav class="site-nav">
  
    <ul id="menu" class="menu">
      
        
        
        
          
          <li class="menu-item menu-item-home">
    <a href="/" rel="section">
      <i class="menu-item-icon fa fa-fw fa-home"></i> <br />Home</a>
  </li>
        
        
        
          
          <li class="menu-item menu-item-archives">
    <a href="/archives/" rel="section">
      <i class="menu-item-icon fa fa-fw fa-archive"></i> <br />Archives</a>
  </li>
        
        
        
          
          <li class="menu-item menu-item-tags">
    <a href="/tags/" rel="section">
      <i class="menu-item-icon fa fa-fw fa-tags"></i> <br />Tags</a>
  </li>
        
        
        
          
          <li class="menu-item menu-item-categories">
    <a href="/categories/" rel="section">
      <i class="menu-item-icon fa fa-fw fa-th"></i> <br />Categories</a>
  </li>

      
      
        <li class="menu-item menu-item-search">
          
            <a href="javascript:;" class="popup-trigger">
          
            
              <i class="menu-item-icon fa fa-search fa-fw"></i> <br />Search</a>
        </li>
      
    </ul>
  

  

  
    <div class="site-search">
      
  <div class="popup search-popup local-search-popup">
  <div class="local-search-header clearfix">
    <span class="search-icon">
      <i class="fa fa-search"></i>
    </span>
    <span class="popup-btn-close">
      <i class="fa fa-times-circle"></i>
    </span>
    <div class="local-search-input-wrapper">
      <input autocomplete="off"
             placeholder="Searching..." spellcheck="false"
             type="text" id="local-search-input">
    </div>
  </div>
  <div id="local-search-result"></div>
</div>



    </div>
  
</nav>



  



</div>
    </header>

    


    <main id="main" class="main">
      <div class="main-inner">
        <div class="content-wrap">
          
            

          
          <div id="content" class="content">
            

  <div id="posts" class="posts-expand">
    

  

  
  
  

  

  <article class="post post-type-normal" itemscope itemtype="http://schema.org/Article">
  
  
  
  <div class="post-block">
    <link itemprop="mainEntityOfPage" href="lyn-ho.github.io/posts/b4cbde14">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="name" content="Lyn Ho">
      <meta itemprop="description" content="Stay Hungry Stay Foolish">
      <meta itemprop="image" content="/images/avatar.gif">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Lyn's Blog">
    </span>

    
      <header class="post-header">

        
        
          <h2 class="post-title" itemprop="name headline">【译】精通 JavaScript： 什么是纯函数（Pure Function）？
              
            
          </h2>
        

        <div class="post-meta">
          <span class="post-time">

            
            
            

            
              <span class="post-meta-item-icon">
                <i class="fa fa-calendar-o"></i>
              </span>
              
                <span class="post-meta-item-text">Posted on</span>
              

              
                
              

              <time title="Created: 2018-09-03 17:13:58" itemprop="dateCreated datePublished" datetime="2018-09-03T17:13:58+08:00">2018-09-03</time>
            

            
              

              
                
                <span class="post-meta-divider">|</span>
                

                <span class="post-meta-item-icon">
                  <i class="fa fa-calendar-check-o"></i>
                </span>
                
                  <span class="post-meta-item-text">Edited on</span>
                
                <time title="Modified: 2018-09-16 21:06:35" itemprop="dateModified" datetime="2018-09-16T21:06:35+08:00">2018-09-16</time>
              
            
          </span>

          

          
            
              <span class="post-comments-count">
                <span class="post-meta-divider">|</span>
                <span class="post-meta-item-icon">
                  <i class="fa fa-comment-o"></i>
                </span>
                <a href="/posts/b4cbde14#comments" itemprop="discussionUrl">
                  <span class="post-meta-item-text">Comments: </span> <span class="post-comments-count gitment-comments-count" data-xid="/posts/b4cbde14" itemprop="commentsCount"></span>
                </a>
              </span>
            
          

          
          
             <span id="/posts/b4cbde14" class="leancloud_visitors" data-flag-title="【译】精通 JavaScript： 什么是纯函数（Pure Function）？">
               <span class="post-meta-divider">|</span>
               <span class="post-meta-item-icon">
                 <i class="fa fa-eye"></i>
               </span>
               
                 <span class="post-meta-item-text">Views: </span>
               
                 <span class="leancloud-visitors-count"></span>
             </span>
          

          

          

          

        </div>
      </header>
    

    
    
    
    <div class="post-body" itemprop="articleBody">

      
      

      
        <blockquote>
<p>原文：<a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976" target="_blank" rel="noopener">Master the JavaScript Interview: What is Pure Function?</a></p>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/2000/1*gF8oCkYNvktBbAAG-nxYrg.jpeg" alt="Image: Pure - carnagenyc (CC BY 2.0)"></p>
<p>纯函数对于包括函数式编程，可靠并发和 React+Redux apps 等用途至关重要。但是 “pure function” 是什么意思呢？</p>
<a id="more"></a>
<p>我们可以在一个免费的课程中学到这个问题的答案 – <a href="http://ericelliottjs.com/product/lifetime-access-pass/" target="_blank" rel="noopener">“Learn JavaScript with Eric Elliott”</a> :</p>
<div class="video-container"><iframe src="//player.vimeo.com/video/160326750" frameborder="0" allowfullscreen></iframe></div>
<p>在我们理解纯函数之前，仔细研究函数可能时一个好主意。可以从不同方式去观察它们，让我们更容易理解函数式编程 (functional programming) 。</p>
<h2 id="什么是函数-Function-？"><a href="#什么是函数-Function-？" class="headerlink" title="什么是函数 (Function) ？"></a>什么是函数 (Function) ？</h2><p>函数是接收输入 (<strong>参数</strong>) 并产生输出 (<strong>返回值</strong>) 的过程。函数有以下用途：</p>
<ul>
<li><p><strong>映射 (Mapping)</strong> ：基于输入产生一些输出。函数是输入值到输出值的映射。</p>
</li>
<li><p><strong>过程 (Procedures)</strong> ：调用函数来执行一个序列的步骤。这个序列被称为过程，并且这种编程风格被称为<strong>过程编程 (procedural programming)</strong> 。</p>
</li>
<li><p><strong>I/O</strong> ：存在一些函数需要和系统的其他部分通信，例如屏幕，存储，系统日志，或者网络。</p>
</li>
</ul>
<h2 id="映射-Mapping"><a href="#映射-Mapping" class="headerlink" title="映射 (Mapping)"></a>映射 (Mapping)</h2><p>纯函数都是关于映射的。函数将参数映射成返回值，意味着对于每一组输入都存在一个输出。函数会接收输入并且返回相应的输出。</p>
<p><code>Math.max()</code> 接收多个数值作为参数并且返回最大的数值：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.max(<span class="number">2</span>, <span class="number">8</span>, <span class="number">5</span>) <span class="comment">// 8</span></span><br></pre></td></tr></table></figure>
<p>在这个例子中，2，8 和 5 作为参数。传入函数中的值。</p>
<p><code>Math.max()</code> 函数接收任意数量的数值作为参数并且返回参数中最大的值。在这个例子中，传入的最大的数值是 8 ，它就是我们要返回的值。</p>
<p>函数在计算和数学中非常重要。它们帮助我们正确地使用数据。优秀的程序员会使用有意义的函数名，当我们看代码时，通过函数名就知道这个函数是做什么的。</p>
<p>数学也有函数，它们和 JavaScript 的函数类似。你可能在代数中看到过函数。像下面这样：</p>
<p><em>f(x) = 2x</em></p>
<p>这以为了我们定义了一个叫做 f 的函数并且有参数 x 然后用 2 乘以 x 。</p>
<p>我们可以使用一个值代替 x 来运用这个函数：</p>
<p><em>f(2)</em></p>
<p>在代数中，这和写 4 的意义完全相同。<br><br>所以任何地方出现的 <em>f(2)</em> 都可以用 4 代替。</p>
<p>现在我们转换这个函数为 JavaScript 的方式：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> double = <span class="function"><span class="params">x</span> =&gt;</span> x * <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>你可以使用 <code>console.log()</code> 函数输出来检验：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log( double(<span class="number">5</span>) ) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure>
<p>还记得我说过可以用 <code>4</code> 来替换 <code>f(2)</code> ，这种情况下， JavaScript 引擎使用 <code>10</code> 替换了 <code>double(5)</code> 。</p>
<p>所以 <code>console.log(double(5))</code> 和 <code>console.log(10)</code> 相同。</p>
<p>因为 <code>double()</code> 是纯函数所以这是正确的，但是如果 <code>double()</code> 有副作用，例如保存数据到磁盘或者记录到控制台，在不改变函数含义的情况下你不能简单地用 <code>10</code> 替换 <code>double(5)</code> 。</p>
<p>如果你想引用透明，你需要使用纯函数。</p>
<h2 id="纯函数-Pure-Functions"><a href="#纯函数-Pure-Functions" class="headerlink" title="纯函数 (Pure Functions)"></a>纯函数 (Pure Functions)</h2><p><strong>纯函数</strong>是：</p>
<ul>
<li><p>给予相同的输入，总是返回相同的输出。</p>
</li>
<li><p>不产生副作用</p>
</li>
</ul>
<blockquote>
<p><em>A dead giveaway that a function is impure is if it makes sense to call it without using its return value. For pure functions, that’s a noop.</em></p>
</blockquote>
<p>我建议你爱上纯函数。意思是如果使用纯函数可以实现程序要求，你应该选择纯函数而非其他。纯函数接收一些输入然后返回基于这些输入的输出。它们是构建程序的最简单可复用模块。也许计算机科学的最重要的设计原则是 KISS (Keep It Simple, Stupid) 。我更喜欢 Keep It Stupid Simple 。纯函数是傻瓜简单的最有可能的方式。</p>
<p>纯函数具有很多有益属性，并且是构建<strong>函数式编程</strong>的基础。纯函数是完全独立于外部状态的，因此，它们免疫于于共享可变状态相关这一类型的 bugs 。纯函数的独立性使其成为处理跨多个 CPU 及跨整个分布式计算机集群的理想选择，这使它们成为很多科学种类和资源密集型计算任务的必要条件。</p>
<p>纯函数也是极其独立的 – 代码易于转换，重构，重组，使你的程序更灵活且更适应未来的改变。</p>
<h3 id="共享状态-Shared-State-的问题"><a href="#共享状态-Shared-State-的问题" class="headerlink" title="共享状态 (Shared State) 的问题"></a>共享状态 (Shared State) 的问题</h3><p>几年前，我当时正在开发一款 app ，允许用户从数据库中搜索音乐家并将这个音乐家的音乐列表加载到网络播放器。在那个时间 Google Instant 出现，当你键入搜索查询会即时显示搜索结果。AJAX 驱动的自动完成突然风靡一时。</p>
<p>唯一的问题是用户输入速度比 API 自动完成搜索的返回值要快，这会导致奇怪的问题。这会触发竞争条件 (race condition) ，较新的结果会被过时的结果覆盖。</p>
<p>为什么会发生这个？因为每个 AJAX 请求成功后都可以直接显示在用户的建议列表上。最慢的 AJAX 请求总是盲目地替换结果显示给用户，即使被替换的结果可能是较新的。</p>
<p>为了解决这个问题，我创建了一个建议管理器 – 管理查询建议状态的唯一数据来源。已知当前正在等待的 AJAX 请求，当用户新键入后，这个等待的 AJAX 请求将会取消并且发起一个新请求，所以同一时间只有一个响应处理函数能够触发 UI 更新。</p>
<p>任何类型的异步或同步操作都可能导致类似的竞争条件。如果输出取决于不可控事件的序列 (例如网络，设备延迟，用户输入，随机性等) ,则会发生条件竞争。事实上，如果你在使用共享状态并且这个状态依赖于根据不确定因素而变化的序列，则无论出于何种意图和目的，输出都是不可预测的，这意味着无法正确测试和完全理解。正如 Martin Odersky (Scala 创造者) 所说：</p>
<blockquote>
<p>non-determinism = parallel processing + mutable state</p>
</blockquote>
<p>程序确定性通常是计算机应用中的理想属性。也许你认为 JS 在单线程中运行，因此不受并行处理问题的影响，但正如 AJAX 示例所示，单线程 JS 引擎并不意味着没有并发性。相反的，JavaScript 中存在很多并发源 (API I/O, 事件监听, web workers, iframes, timeouts) 向程序中引入不确定性。将这些与共享状态结合，你会得到一堆 bugs 。</p>
<p>纯函数可以帮助你避免这些 bugs 。</p>
<h3 id="接收同样的输入，总是返回同样的输出"><a href="#接收同样的输入，总是返回同样的输出" class="headerlink" title="接收同样的输入，总是返回同样的输出"></a>接收同样的输入，总是返回同样的输出</h3><p>使用 <code>double()</code> 函数，你可以用结果替换函数调用，并且程序会认为是同一件事， <code>double(5)</code> 和 <code>10</code> 在程序应用中是同一个意思，无论上下午如何，无论调用的次数和时间。</p>
<p>但并不是所有的函数都是和结果一直相同。某些函数还依赖于传入参数之外的信息来生成结果。</p>
<p>思考这个例子：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.random()   <span class="comment">// 0.4619094094074556</span></span><br><span class="line"><span class="built_in">Math</span>.random()   <span class="comment">// 0.602651887966867</span></span><br><span class="line"><span class="built_in">Math</span>.random()   <span class="comment">// 0.9958664270880297</span></span><br></pre></td></tr></table></figure>
<p>即使我们没有传入任何参数到上面的函数调用中，它们生成了不同的输出，这意味着 <code>Math.random()</code> 不是纯函数。</p>
<p><code>Math.random()</code> 函数在每次调用后会生成一个新的在 0 和 1 之间的随机数，所以很明显你不能在不改变程序含义的情况下用 <code>0.4619094094074556</code> 替换 <code>Math.random()</code> 函数。</p>
<p>如果替换了每次都会产生相同的结果。当我们向计算机询问一个随机数时，通常意味着我们想要不同于上一次的结果。所有侧面都是相同数字的骰子有什么意思？</p>
<p>有时我们会向计算机询问当前时间。我们不会详细介绍时间函数的工作原理。现在，复制下面的代码：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> time = <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleTimeString()</span><br><span class="line">time() <span class="comment">// =&gt; "2:20:34 PM"</span></span><br></pre></td></tr></table></figure>
<p>如果用当前时间替换 <code>time()</code> 函数调用会发生什么？</p>
<p>它将会一直输出相同的时间：那个替换函数调用的时间。换句话说，每天只能生成一个正确的输出，并且只有在替换函数调用的时间的确切时刻运行程序才会生成。</p>
<p>所以很明显， <code>time()</code> 和 <code>double()</code> 不同。</p>
<p>只有给定相同的输入，一定生成相同的输出的函数才是纯函数。你可能记得袋鼠中的这个规则，相同的输入值总是映射到相同的输出值。然而，不同的输入值可以映射到相同的输出值。例如，下面这个函数是纯函数：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> highpass = <span class="function">(<span class="params">cutoff, value</span>) =&gt;</span> value &gt;= cutoff</span><br></pre></td></tr></table></figure>
<p>相同的输入值总是映射到相同的输出值：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">highpass(<span class="number">5</span>, <span class="number">5</span>) <span class="comment">// =&gt; true</span></span><br><span class="line">highpass(<span class="number">5</span>, <span class="number">5</span>) <span class="comment">// =&gt; true</span></span><br><span class="line">highpass(<span class="number">5</span>, <span class="number">5</span>) <span class="comment">// =&gt; true</span></span><br></pre></td></tr></table></figure>
<p>不同的输入值可以映射到相同的输出值：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">highpass(<span class="number">5</span>, <span class="number">123</span>) <span class="comment">// true</span></span><br><span class="line">highpass(<span class="number">5</span>, <span class="number">6</span>) <span class="comment">// true</span></span><br><span class="line">highpass(<span class="number">5</span>, <span class="number">18</span>) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">highpass(<span class="number">5</span>, <span class="number">1</span>) <span class="comment">// false</span></span><br><span class="line">highpass(<span class="number">5</span>, <span class="number">3</span>) <span class="comment">// false</span></span><br><span class="line">highpass(<span class="number">5</span>, <span class="number">4</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<p>纯函数一定不可以依赖任何外部可变状态，以为这样函数将不再具有确定性和引用透明。</p>
<h2 id="纯函数不会产生副作用-No-Side-Effects"><a href="#纯函数不会产生副作用-No-Side-Effects" class="headerlink" title="纯函数不会产生副作用 (No Side Effects)"></a>纯函数不会产生副作用 (No Side Effects)</h2><p>纯函数不会产生副作用，意思是它不能改变任何外部状态。</p>
<h2 id="不可变性-Immutability"><a href="#不可变性-Immutability" class="headerlink" title="不可变性 (Immutability)"></a>不可变性 (Immutability)</h2><p>JavaScript 的对象参数是引用，这意味着如果函数改变了一个对象或数组参数的属性，也会改变在函数外部的状态。纯函数一定不会改变外部状态。</p>
<p>思考这个可变的，非纯函数 <code>addToCart()</code></p>
<script src="//gist.github.com/27d689731f703fa0e095c0dc524728c6.js?file=impure-add-to-cart.js"></script>
<p>它的工作原理是传入 cart，item 和 quantity (购物车，商品种类和商品数量) 。函数会将 item 添加到 cart 并返回 cart。</p>
<p>这个函数的问题是我们刚刚改变了一些共享状态。其他函数可能依赖于调用函数之前状态的 cart ，现在我们已经改变了共享状态，如果我们改变调用函数的顺序，我们不得不担心它会对程序逻辑产生什么影响。重构代码可能导致产生 bugs ，这可能会搞砸订单，导致客户生气。</p>
<p>现在思考这个版本：</p>
<script src="//gist.github.com/56ef48bc044251fe44203703ed6902d7.js?file=pure-add-to-cart.js"></script>
<p>在这个示例中，因为对象中嵌套了一个数组，所以需要深克隆。这比你一般处理的状态更复杂。大多数情况下，你可以将其分解成更小的块。</p>
<p>例如， Redux 允许你组合 reducers 而不是在每个 reducer 中处理整个 app 状态。结果是，每次你想要更新其中的一小部分时，不必创建整个 app 状态的深克隆。相反的，你可以使用 non-destructive 数组方法或 <code>Object.assign()</code> 来更新 app 状态的一小部分。</p>
<h2 id="探索-‘Master-the-JavaScript-Interview’-系列"><a href="#探索-‘Master-the-JavaScript-Interview’-系列" class="headerlink" title="探索 ‘Master the JavaScript Interview’ 系列"></a>探索 ‘Master the JavaScript Interview’ 系列</h2><ul>
<li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36" target="_blank" rel="noopener">What is a Closure?</a></p>
</li>
<li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-s-the-difference-between-class-prototypal-inheritance-e4cd0a7562e9" target="_blank" rel="noopener">What is the Difference Between Class and Prototypal Inheritance?</a></p>
</li>
<li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976" target="_blank" rel="noopener">What is a Pure Function?</a></p>
</li>
<li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-function-composition-20dfb109a1a0" target="_blank" rel="noopener">What is a Function Composition?</a></p>
</li>
<li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-functional-programming-7f218c68b3a0" target="_blank" rel="noopener">What is a Function Programming?</a></p>
</li>
<li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261" target="_blank" rel="noopener">What is a Promise?</a></p>
</li>
<li><p><a href="https://medium.com/javascript-scene/master-the-javascript-interview-soft-skills-a8a5fb02c466" target="_blank" rel="noopener">Soft Skills</a></p>
</li>
</ul>

      
    </div>

    

    
    
    

    

    

    

    <footer class="post-footer">
      
        <div class="post-tags">
          
            <a href="/tags/JavaScript/" rel="tag"># JavaScript</a>
          
        </div>
      

      
      
        <div class="post-widgets">
        

        

        
          
          <div class="social_share">
            
            
               <div id="needsharebutton-postbottom">
                 <span class="btn">
                    <i class="fa fa-share-alt" aria-hidden="true"></i>
                 </span>
               </div>
            
          </div>
        
        </div>
      
      

      
        <div class="post-nav">
          <div class="post-nav-next post-nav-item">
            
              <a href="/posts/6a904bf2" rel="next" title="【译】精通 JavaScript： 什么是 Promise？">
                <i class="fa fa-chevron-left"></i> 【译】精通 JavaScript： 什么是 Promise？
              </a>
            
          </div>

          <span class="post-nav-divider"></span>

          <div class="post-nav-prev post-nav-item">
            
              <a href="/posts/8e5d7b3b" rel="prev" title="【译】精通 JavaScript： 什么是函数组合（Function Composition）？">
                【译】精通 JavaScript： 什么是函数组合（Function Composition）？ <i class="fa fa-chevron-right"></i>
              </a>
            
          </div>
        </div>
      

      
      
    </footer>
  </div>
  
  
  
  </article>


  </div>


          </div>
          

  
    <div class="comments" id="comments">
      
        <div id="gitment-container"></div>
      
    </div>

  



        </div>
        
          
  
  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    
    <div class="sidebar-inner">

      

      
        <ul class="sidebar-nav motion-element">
          <li class="sidebar-nav-toc sidebar-nav-active" data-target="post-toc-wrap">
            Table of Contents
          </li>
          <li class="sidebar-nav-overview" data-target="site-overview-wrap">
            Overview
          </li>
        </ul>
      

      <section class="site-overview-wrap sidebar-panel">
        <div class="site-overview">
          <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
            
              <p class="site-author-name" itemprop="name">Lyn Ho</p>
              <p class="site-description motion-element" itemprop="description">Stay Hungry Stay Foolish</p>
          </div>

          
            <nav class="site-state motion-element">
              
                <div class="site-state-item site-state-posts">
                
                  <a href="/archives/">
                
                    <span class="site-state-item-count">10</span>
                    <span class="site-state-item-name">posts</span>
                  </a>
                </div>
              

              

              
                
                
                <div class="site-state-item site-state-tags">
                  <a href="/tags/index.html">
                    
                    
                      
                    
                    <span class="site-state-item-count">1</span>
                    <span class="site-state-item-name">tags</span>
                  </a>
                </div>
              
            </nav>
          

          

          
            <div class="links-of-author motion-element">
              
                <span class="links-of-author-item">
                  <a href="https://github.com/lyn-ho" target="_blank" title="GitHub" rel="external nofollow"><i class="fa fa-fw fa-github"></i>GitHub</a>
                  
                </span>
              
                <span class="links-of-author-item">
                  <a href="lyn4develop@gmail.com" target="_blank" title="E-Mail" rel="external nofollow"><i class="fa fa-fw fa-envelope"></i>E-Mail</a>
                  
                </span>
              
                <span class="links-of-author-item">
                  <a href="https://twitter.com/Lyn_ho007" target="_blank" title="Twitter" rel="external nofollow"><i class="fa fa-fw fa-twitter"></i>Twitter</a>
                  
                </span>
              
                <span class="links-of-author-item">
                  <a href="https://www.facebook.com/lyn.ho.12576" target="_blank" title="Facebook" rel="external nofollow"><i class="fa fa-fw fa-facebook"></i>Facebook</a>
                  
                </span>
              
                <span class="links-of-author-item">
                  <a href="https://www.linkedin.com/in/lyn-ho-112124108/" target="_blank" title="Linkedin" rel="external nofollow"><i class="fa fa-fw fa-linkedin"></i>Linkedin</a>
                  
                </span>
              
                <span class="links-of-author-item">
                  <a href="https://www.instagram.com/ho.lyn" target="_blank" title="Instagram" rel="external nofollow"><i class="fa fa-fw fa-instagram"></i>Instagram</a>
                  
                </span>
              
            </div>
          

          
          

          
          

          
            
          
          

        </div>
      </section>

      
      <!--noindex-->
        <section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active">
          <div class="post-toc">

            
              
            

            
              <div class="post-toc-content"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#什么是函数-Function-？"><span class="nav-number">1.</span> <span class="nav-text">什么是函数 (Function) ？</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#映射-Mapping"><span class="nav-number">2.</span> <span class="nav-text">映射 (Mapping)</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#纯函数-Pure-Functions"><span class="nav-number">3.</span> <span class="nav-text">纯函数 (Pure Functions)</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#共享状态-Shared-State-的问题"><span class="nav-number">3.1.</span> <span class="nav-text">共享状态 (Shared State) 的问题</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#接收同样的输入，总是返回同样的输出"><span class="nav-number">3.2.</span> <span class="nav-text">接收同样的输入，总是返回同样的输出</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#纯函数不会产生副作用-No-Side-Effects"><span class="nav-number">4.</span> <span class="nav-text">纯函数不会产生副作用 (No Side Effects)</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#不可变性-Immutability"><span class="nav-number">5.</span> <span class="nav-text">不可变性 (Immutability)</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#探索-‘Master-the-JavaScript-Interview’-系列"><span class="nav-number">6.</span> <span class="nav-text">探索 ‘Master the JavaScript Interview’ 系列</span></a></li></ol></div>
            

          </div>
        </section>
      <!--/noindex-->
      

      

    </div>
  </aside>


        
      </div>
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright">&copy; <span itemprop="copyrightYear">2018</span>
  <span class="with-love" id="animate">
    <i class="fa fa-user"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Lyn Ho</span>

  

  
</div>


  










        








        
      </div>
    </footer>

    
      <div class="back-to-top">
        <i class="fa fa-arrow-up"></i>
        
      </div>
    

    
      <div id="needsharebutton-float">
        <span class="btn">
          <i class="fa fa-share-alt" aria-hidden="true"></i>
        </span>
      </div>
    
	
    

    
  </div>

  

<script type="text/javascript">
  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {
    window.Promise = null;
  }
</script>


























  
  
    <script type="text/javascript" src="/lib/jquery/index.js?v=2.1.3"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.min.js?v=1.2.1"></script>
  

  
  
    <script type="text/javascript" src="/lib/velocity/velocity.ui.min.js?v=1.2.1"></script>
  


  


  <script type="text/javascript" src="/js/src/utils.js?v=6.4.0"></script>

  <script type="text/javascript" src="/js/src/motion.js?v=6.4.0"></script>



  
  


  <script type="text/javascript" src="/js/src/affix.js?v=6.4.0"></script>

  <script type="text/javascript" src="/js/src/schemes/pisces.js?v=6.4.0"></script>



  
  <script type="text/javascript" src="/js/src/scrollspy.js?v=6.4.0"></script>
<script type="text/javascript" src="/js/src/post-details.js?v=6.4.0"></script>



  


  <script type="text/javascript" src="/js/src/bootstrap.js?v=6.4.0"></script>



  



  






<!-- LOCAL: You can save these files to your site and update links -->
    
        
        <link rel="stylesheet" href="https://aimingoo.github.io/gitmint/style/default.css">
        <script src="https://aimingoo.github.io/gitmint/dist/gitmint.browser.js"></script>
    
<!-- END LOCAL -->

    

    
      <script type="text/javascript">
      function renderGitment(){
        var gitment = new Gitmint({
            id: window.location.pathname,
            owner: 'lyn-ho',
            repo: 'lyn-ho.github.io',
            
            lang: "" || navigator.language || navigator.systemLanguage || navigator.userLanguage,
            
            oauth: {
            
            
                client_secret: '8c2e6d4bd597b72ed3a7746fff83510a86f0d7cf',
            
                client_id: 'c9d562b27e0fa8453124'
            }});
        gitment.render('gitment-container');
      }

      
      renderGitment();
      
      </script>
    






  

  <script type="text/javascript">
    // Popup Window;
    var isfetched = false;
    var isXml = true;
    // Search DB path;
    var search_path = "search.xml";
    if (search_path.length === 0) {
      search_path = "search.xml";
    } else if (/json$/i.test(search_path)) {
      isXml = false;
    }
    var path = "/" + search_path;
    // monitor main search box;

    var onPopupClose = function (e) {
      $('.popup').hide();
      $('#local-search-input').val('');
      $('.search-result-list').remove();
      $('#no-result').remove();
      $(".local-search-pop-overlay").remove();
      $('body').css('overflow', '');
    }

    function proceedsearch() {
      $("body")
        .append('<div class="search-popup-overlay local-search-pop-overlay"></div>')
        .css('overflow', 'hidden');
      $('.search-popup-overlay').click(onPopupClose);
      $('.popup').toggle();
      var $localSearchInput = $('#local-search-input');
      $localSearchInput.attr("autocapitalize", "none");
      $localSearchInput.attr("autocorrect", "off");
      $localSearchInput.focus();
    }

    // search function;
    var searchFunc = function(path, search_id, content_id) {
      'use strict';

      // start loading animation
      $("body")
        .append('<div class="search-popup-overlay local-search-pop-overlay">' +
          '<div id="search-loading-icon">' +
          '<i class="fa fa-spinner fa-pulse fa-5x fa-fw"></i>' +
          '</div>' +
          '</div>')
        .css('overflow', 'hidden');
      $("#search-loading-icon").css('margin', '20% auto 0 auto').css('text-align', 'center');

      

      $.ajax({
        url: path,
        dataType: isXml ? "xml" : "json",
        async: true,
        success: function(res) {
          // get the contents from search data
          isfetched = true;
          $('.popup').detach().appendTo('.header-inner');
          var datas = isXml ? $("entry", res).map(function() {
            return {
              title: $("title", this).text(),
              content: $("content",this).text(),
              url: $("url" , this).text()
            };
          }).get() : res;
          var input = document.getElementById(search_id);
          var resultContent = document.getElementById(content_id);
          var inputEventFunction = function() {
            var searchText = input.value.trim().toLowerCase();
            var keywords = searchText.split(/[\s\-]+/);
            if (keywords.length > 1) {
              keywords.push(searchText);
            }
            var resultItems = [];
            if (searchText.length > 0) {
              // perform local searching
              datas.forEach(function(data) {
                var isMatch = false;
                var hitCount = 0;
                var searchTextCount = 0;
                var title = data.title.trim();
                var titleInLowerCase = title.toLowerCase();
                var content = data.content.trim().replace(/<[^>]+>/g,"");
                
                var contentInLowerCase = content.toLowerCase();
                var articleUrl = decodeURIComponent(data.url);
                var indexOfTitle = [];
                var indexOfContent = [];
                // only match articles with not empty titles
                if(title != '') {
                  keywords.forEach(function(keyword) {
                    function getIndexByWord(word, text, caseSensitive) {
                      var wordLen = word.length;
                      if (wordLen === 0) {
                        return [];
                      }
                      var startPosition = 0, position = [], index = [];
                      if (!caseSensitive) {
                        text = text.toLowerCase();
                        word = word.toLowerCase();
                      }
                      while ((position = text.indexOf(word, startPosition)) > -1) {
                        index.push({position: position, word: word});
                        startPosition = position + wordLen;
                      }
                      return index;
                    }

                    indexOfTitle = indexOfTitle.concat(getIndexByWord(keyword, titleInLowerCase, false));
                    indexOfContent = indexOfContent.concat(getIndexByWord(keyword, contentInLowerCase, false));
                  });
                  if (indexOfTitle.length > 0 || indexOfContent.length > 0) {
                    isMatch = true;
                    hitCount = indexOfTitle.length + indexOfContent.length;
                  }
                }

                // show search results

                if (isMatch) {
                  // sort index by position of keyword

                  [indexOfTitle, indexOfContent].forEach(function (index) {
                    index.sort(function (itemLeft, itemRight) {
                      if (itemRight.position !== itemLeft.position) {
                        return itemRight.position - itemLeft.position;
                      } else {
                        return itemLeft.word.length - itemRight.word.length;
                      }
                    });
                  });

                  // merge hits into slices

                  function mergeIntoSlice(text, start, end, index) {
                    var item = index[index.length - 1];
                    var position = item.position;
                    var word = item.word;
                    var hits = [];
                    var searchTextCountInSlice = 0;
                    while (position + word.length <= end && index.length != 0) {
                      if (word === searchText) {
                        searchTextCountInSlice++;
                      }
                      hits.push({position: position, length: word.length});
                      var wordEnd = position + word.length;

                      // move to next position of hit

                      index.pop();
                      while (index.length != 0) {
                        item = index[index.length - 1];
                        position = item.position;
                        word = item.word;
                        if (wordEnd > position) {
                          index.pop();
                        } else {
                          break;
                        }
                      }
                    }
                    searchTextCount += searchTextCountInSlice;
                    return {
                      hits: hits,
                      start: start,
                      end: end,
                      searchTextCount: searchTextCountInSlice
                    };
                  }

                  var slicesOfTitle = [];
                  if (indexOfTitle.length != 0) {
                    slicesOfTitle.push(mergeIntoSlice(title, 0, title.length, indexOfTitle));
                  }

                  var slicesOfContent = [];
                  while (indexOfContent.length != 0) {
                    var item = indexOfContent[indexOfContent.length - 1];
                    var position = item.position;
                    var word = item.word;
                    // cut out 100 characters
                    var start = position - 20;
                    var end = position + 80;
                    if(start < 0){
                      start = 0;
                    }
                    if (end < position + word.length) {
                      end = position + word.length;
                    }
                    if(end > content.length){
                      end = content.length;
                    }
                    slicesOfContent.push(mergeIntoSlice(content, start, end, indexOfContent));
                  }

                  // sort slices in content by search text's count and hits' count

                  slicesOfContent.sort(function (sliceLeft, sliceRight) {
                    if (sliceLeft.searchTextCount !== sliceRight.searchTextCount) {
                      return sliceRight.searchTextCount - sliceLeft.searchTextCount;
                    } else if (sliceLeft.hits.length !== sliceRight.hits.length) {
                      return sliceRight.hits.length - sliceLeft.hits.length;
                    } else {
                      return sliceLeft.start - sliceRight.start;
                    }
                  });

                  // select top N slices in content

                  var upperBound = parseInt('1');
                  if (upperBound >= 0) {
                    slicesOfContent = slicesOfContent.slice(0, upperBound);
                  }

                  // highlight title and content

                  function highlightKeyword(text, slice) {
                    var result = '';
                    var prevEnd = slice.start;
                    slice.hits.forEach(function (hit) {
                      result += text.substring(prevEnd, hit.position);
                      var end = hit.position + hit.length;
                      result += '<b class="search-keyword">' + text.substring(hit.position, end) + '</b>';
                      prevEnd = end;
                    });
                    result += text.substring(prevEnd, slice.end);
                    return result;
                  }

                  var resultItem = '';

                  if (slicesOfTitle.length != 0) {
                    resultItem += "<li><a href='" + articleUrl + "' class='search-result-title'>" + highlightKeyword(title, slicesOfTitle[0]) + "</a>";
                  } else {
                    resultItem += "<li><a href='" + articleUrl + "' class='search-result-title'>" + title + "</a>";
                  }

                  slicesOfContent.forEach(function (slice) {
                    resultItem += "<a href='" + articleUrl + "'>" +
                      "<p class=\"search-result\">" + highlightKeyword(content, slice) +
                      "...</p>" + "</a>";
                  });

                  resultItem += "</li>";
                  resultItems.push({
                    item: resultItem,
                    searchTextCount: searchTextCount,
                    hitCount: hitCount,
                    id: resultItems.length
                  });
                }
              })
            };
            if (keywords.length === 1 && keywords[0] === "") {
              resultContent.innerHTML = '<div id="no-result"><i class="fa fa-search fa-5x" /></div>'
            } else if (resultItems.length === 0) {
              resultContent.innerHTML = '<div id="no-result"><i class="fa fa-frown-o fa-5x" /></div>'
            } else {
              resultItems.sort(function (resultLeft, resultRight) {
                if (resultLeft.searchTextCount !== resultRight.searchTextCount) {
                  return resultRight.searchTextCount - resultLeft.searchTextCount;
                } else if (resultLeft.hitCount !== resultRight.hitCount) {
                  return resultRight.hitCount - resultLeft.hitCount;
                } else {
                  return resultRight.id - resultLeft.id;
                }
              });
              var searchResultList = '<ul class=\"search-result-list\">';
              resultItems.forEach(function (result) {
                searchResultList += result.item;
              })
              searchResultList += "</ul>";
              resultContent.innerHTML = searchResultList;
            }
          }

          if ('auto' === 'auto') {
            input.addEventListener('input', inputEventFunction);
          } else {
            $('.search-icon').click(inputEventFunction);
            input.addEventListener('keypress', function (event) {
              if (event.keyCode === 13) {
                inputEventFunction();
              }
            });
          }

          // remove loading animation
          $(".local-search-pop-overlay").remove();
          $('body').css('overflow', '');

          proceedsearch();
        }
      });
    }

    // handle and trigger popup window;
    $('.popup-trigger').click(function(e) {
      e.stopPropagation();
      if (isfetched === false) {
        searchFunc(path, 'local-search-input', 'local-search-result');
      } else {
        proceedsearch();
      };
    });

    $('.popup-btn-close').click(onPopupClose);
    $('.popup').click(function(e){
      e.stopPropagation();
    });
    $(document).on('keyup', function (event) {
      var shouldDismissSearchPopup = event.which === 27 &&
        $('.search-popup').is(':visible');
      if (shouldDismissSearchPopup) {
        onPopupClose();
      }
    });
  </script>





  

  
  <script>
    
    function addCount(Counter) {
      var $visitors = $(".leancloud_visitors");
      var url = $visitors.attr('id').trim();
      var title = $visitors.attr('data-flag-title').trim();

      Counter('get', '/classes/Counter', { where: JSON.stringify({ url }) })
        .done(function ({ results }) {
          if (results.length > 0) {
            var counter = results[0];
            
            Counter('put', `/classes/Counter/${counter.objectId}`, JSON.stringify({ time: { "__op":"Increment", "amount":1 } }))
            
            .done(function () {
                  var $element = $(document.getElementById(url));
                  $element.find('.leancloud-visitors-count').text(counter.time + 1);
            })
            
            .fail(function ({ responseJSON }) {
                console.log('Failed to save Visitor num, with error message: ' + responseJSON.error);
            })
          } else {
            
              var $element = $(document.getElementById(url));
              $element.find('.leancloud-visitors-count').text('Counter not initialized! See more at console err msg.');
              console.error('ATTENTION! LeanCloud counter has security bug, see here how to solve it: https://github.com/theme-next/hexo-leancloud-counter-security. \n But you also can use LeanCloud without security, by set \'security\' option to \'false\'.');
            
          }
        })
      .fail(function ({ responseJSON }) {
        console.log('LeanCloud Counter Error:' + responseJSON.code + " " + responseJSON.error);
      });
    }
    

    $(function() {
      $.get('https://app-router.leancloud.cn/2/route?appId=' + "ddwFbeovSHu8b865RlXYBvKI-gzGzoHsz")
        .done(function ({ api_server }) {
          var Counter = function (method, url, data) {
            return $.ajax({
              method: method,
              url: `https://${api_server}/1.1${url}`,
              headers: {
                'X-LC-Id': "ddwFbeovSHu8b865RlXYBvKI-gzGzoHsz",
                'X-LC-Key': "udbWE7faUIW1BPvBgctXlUSH",
                'Content-Type': 'application/json',
              },
              data: data,
            });
          };
          
          addCount(Counter);
          
        })
    });
  </script>



  

  
<script>
(function(){
    var bp = document.createElement('script');
    var curProtocol = window.location.protocol.split(':')[0];
    if (curProtocol === 'https') {
        bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';        
    }
    else {
        bp.src = 'http://push.zhanzhang.baidu.com/push.js';
    }
    var s = document.getElementsByTagName("script")[0];
    s.parentNode.insertBefore(bp, s);
})();
</script>


  

  
  
  
  <script src="/lib/needsharebutton/needsharebutton.js"></script>

  <script>
    
      pbOptions = {};
      
          pbOptions.iconStyle = "box";
      
          pbOptions.boxForm = "horizontal";
      
          pbOptions.position = "bottomCenter";
      
          pbOptions.networks = "Weibo,Wechat,Douban,QQZone,Twitter,Facebook";
      
      new needShareButton('#needsharebutton-postbottom', pbOptions);
    
    
      flOptions = {};
      
          flOptions.iconStyle = "box";
      
          flOptions.boxForm = "horizontal";
      
          flOptions.position = "middleRight";
      
          flOptions.networks = "Weibo,Wechat,Douban,QQZone,Twitter,Facebook";
      
      new needShareButton('#needsharebutton-float', flOptions);
    
  </script>

  

  

  

  

  
  
  
  <script src="/lib/bookmark/bookmark.min.js?v=1.0"></script>
  <script type="text/javascript">
  
    bookmark.scrollToMark('auto', "#more");
  
  </script>


  

</body>
</html>
